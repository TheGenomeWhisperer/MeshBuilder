// Inherit to MeshM.cs
// Last Updated June 1st, 2016

public class WoDM
{
    public WoDM() {}
    
    public static Vector3[] GetDraenorMesh(Vector3 destination, bool factionIsHorde)
    {
        List<Vector3> location = new List<Vector3>();
        // Vector3 generic = new Vector3(0f,0f,0f);
        // bool collectAll = (generic == destination ? true : false);
        if (factionIsHorde)
        {
            
            // Shipyard will need 2 different mesh phases....
            // Horde Shipyard before it is built and after
            if (!MeshM.API.IsQuestCompleted(38574))
            {
                Vector3[] shipyard0 = new Vector3[]{new Vector3(5550.625f, 4705.397f, 152.1063f),new Vector3(5546.828f, 4711.047f, 151.748f),new Vector3(5542.766f, 4717.093f, 151.1567f),new Vector3(5539.845f, 4721.439f, 150.6639f),new Vector3(5535.822f, 4726.696f, 149.5799f),new Vector3(5532.332f, 4731.064f, 148.3706f),new Vector3(5528.035f, 4736.442f, 146.3795f),new Vector3(5524.776f, 4740.5f, 144.6692f),new Vector3(5519.568f, 4744.555f, 142.269f),new Vector3(5514.956f, 4746.93f, 140.2189f),new Vector3(5511.983f, 4748.353f, 138.7684f),new Vector3(5509.002f, 4749.391f, 137.4297f),new Vector3(5503.534f, 4751.295f, 135.2513f),new Vector3(5498.574f, 4753.022f, 133.4609f),new Vector3(5492.074f, 4755.287f, 131.1963f),new Vector3(5486.996f, 4757.175f, 129.7776f),new Vector3(5482.442f, 4759.694f, 128.8249f),new Vector3(5478.446f, 4763.092f, 127.8148f),new Vector3(5474.578f, 4766.933f, 126.5131f),new Vector3(5469.966f, 4771.577f, 125.041f),new Vector3(5467.797f, 4776.434f, 123.7659f),new Vector3(5466.299f, 4783.155f, 121.6316f),new Vector3(5467.987f, 4789.542f, 119.6534f),new Vector3(5470.852f, 4794.239f, 117.7255f),new Vector3(5474.265f, 4798.39f, 115.8725f),new Vector3(5477.535f, 4802.22f, 114.3182f),new Vector3(5482.083f, 4807.489f, 112.6408f),new Vector3(5485.125f, 4812.194f, 111.3104f),new Vector3(5487.252f, 4817.146f, 109.7366f),new Vector3(5489.729f, 4822.971f, 107.7717f),new Vector3(5491.975f, 4828.258f, 105.9937f),new Vector3(5493.855f, 4833.136f, 104.4004f),new Vector3(5494.488f, 4838.371f, 102.3842f),new Vector3(5492.254f, 4844.668f, 99.16073f),new Vector3(5489.598f, 4849.517f, 96.64353f),new Vector3(5486.236f, 4855.629f, 93.82556f),new Vector3(5483.424f, 4860.621f, 91.56194f),new Vector3(5480.477f, 4865.147f, 89.61246f),new Vector3(5476.361f, 4870.625f, 87.239f),new Vector3(5471.445f, 4875.379f, 84.93637f),new Vector3(5467.086f, 4878.802f, 83.30821f),new Vector3(5461.373f, 4882.964f, 81.53533f),new Vector3(5457.066f, 4886.102f, 80.10737f),new Vector3(5451.714f, 4890.001f, 78.46486f),new Vector3(5447.196f, 4893.293f, 77.17242f),new Vector3(5441.781f, 4897.238f, 75.55862f),new Vector3(5436.343f, 4901.123f, 73.81854f),new Vector3(5430.787f, 4905.08f, 71.99633f),new Vector3(5427.024f, 4908.985f, 70.66383f),new Vector3(5422.998f, 4914.567f, 69.23177f),new Vector3(5420.119f, 4919.031f, 68.36018f),new Vector3(5416.638f, 4925.201f, 67.3028f),new Vector3(5414.333f, 4931.491f, 66.10377f),new Vector3(5414.442f, 4938.497f, 65.1665f),new Vector3(5416.277f, 4942.993f, 64.6912f),new Vector3(5419.407f, 4949.69f, 64.55585f),new Vector3(5422.361f, 4956.01f, 63.78884f),new Vector3(5424.942f, 4961.703f, 63.37103f),new Vector3(5425.602f, 4967.249f, 62.96553f),new Vector3(5425.55f, 4968.603f, 62.98074f),new Vector3(5552.188f, 4703.071f, 152.1366f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
                
                // Sorting closest nodes
                if (destination.Distance(shipyard0[MeshM.GetMeshIndex(shipyard0,destination)]) < 20f)
                {
                    return shipyard0;
                }
                location.AddRange(shipyard0);
            }
            else
            {
                
                // Main Shipyard Path...
                Vector3[] shipyard1 = new Vector3[]{new Vector3(5550.672f, 4704.93f, 152.1208f),new Vector3(5547.691f, 4709.419f, 151.8436f),new Vector3(5544.975f, 4713.769f, 151.5223f),new Vector3(5542.136f, 4718.314f, 151.0295f),new Vector3(5538.795f, 4723.039f, 150.4053f),new Vector3(5535.569f, 4727.261f, 149.4773f),new Vector3(5532.456f, 4731.335f, 148.3501f),new Vector3(5529.183f, 4735.618f, 146.8338f),new Vector3(5525.128f, 4740.833f, 144.697f),new Vector3(5522.801f, 4743.441f, 143.4292f),new Vector3(5517.555f, 4745.781f, 141.4057f),new Vector3(5512.686f, 4747.946f, 139.1226f),new Vector3(5507.792f, 4749.713f, 136.8888f),new Vector3(5501.383f, 4751.763f, 134.4999f),new Vector3(5495.061f, 4753.785f, 132.263f),new Vector3(5489.958f, 4755.424f, 130.5897f),new Vector3(5484.67f, 4757.741f, 129.3147f),new Vector3(5478.666f, 4760.669f, 128.0314f),new Vector3(5474.2f, 4763.674f, 126.8118f),new Vector3(5471.224f, 4767.702f, 125.8406f),new Vector3(5468.84f, 4772.587f, 124.7463f),new Vector3(5466.954f, 4779.355f, 122.8707f),new Vector3(5466.647f, 4784.401f, 121.262f),new Vector3(5468.766f, 4789.613f, 119.5333f),new Vector3(5472.36f, 4795.592f, 117.0274f),new Vector3(5475.436f, 4799.937f, 115.2432f),new Vector3(5479.687f, 4805.173f, 113.3491f),new Vector3(5483.126f, 4809.403f, 112.1296f),new Vector3(5486.565f, 4813.633f, 110.7745f),new Vector3(5490.833f, 4819.137f, 109.2726f),new Vector3(5491.844f, 4825.681f, 106.8406f),new Vector3(5491.757f, 4832.779f, 104.2053f),new Vector3(5491.329f, 4839.047f, 100.5969f),new Vector3(5490.855f, 4845.328f, 96.77287f),new Vector3(5489.328f, 4851.947f, 92.21482f),new Vector3(5487.653f, 4856.809f, 88.73573f),new Vector3(5484.409f, 4862.815f, 84.25673f),new Vector3(5481.18f, 4866.772f, 81.27448f),new Vector3(5477.125f, 4870.572f, 78.47294f),new Vector3(5472.451f, 4873.902f, 76.00912f),new Vector3(5466.785f, 4877.619f, 72.76612f),new Vector3(5462.059f, 4880.719f, 70.02617f),new Vector3(5457.707f, 4883.573f, 67.57056f),new Vector3(5452.105f, 4887.248f, 64.38916f),new Vector3(5447.534f, 4890.246f, 61.76727f),new Vector3(5443.246f, 4893.059f, 59.67714f),new Vector3(5438.469f, 4896.193f, 57.64963f),new Vector3(5433.984f, 4899.156f, 55.86748f),new Vector3(5430.001f, 4901.951f, 54.1808f),new Vector3(5425.243f, 4907.643f, 51.64513f),new Vector3(5422.507f, 4912.18f, 49.69565f),new Vector3(5418.969f, 4918.049f, 47.33041f),new Vector3(5416.612f, 4923.21f, 45.82544f),new Vector3(5414.632f, 4929.63f, 44.53605f),new Vector3(5409.071f, 4932.911f, 42.51779f),new Vector3(5402.295f, 4934.43f, 40.05399f),new Vector3(5396.902f, 4935.104f, 38.08603f),new Vector3(5391.792f, 4934.086f, 36.49277f),new Vector3(5386.023f, 4930.798f, 35.55548f),new Vector3(5384.786f, 4927.044f, 34.96416f),new Vector3(5385.394f, 4920.312f, 33.12659f),new Vector3(5385.365f, 4914.786f, 30.45438f),new Vector3(5384.482f, 4909.52f, 28.2113f),new Vector3(5379.35f, 4905.464f, 26.07908f),new Vector3(5374.308f, 4903.808f, 24.44681f),new Vector3(5368.728f, 4905.124f, 22.35258f),new Vector3(5364.128f, 4907.625f, 19.76867f),new Vector3(5358.161f, 4911.858f, 15.75062f),new Vector3(5354.207f, 4914.977f, 13.45928f),new Vector3(5349.47f, 4920.068f, 10.53557f),new Vector3(5346.325f, 4923.94f, 8.744178f),new Vector3(5343.227f, 4928.443f, 6.880927f),new Vector3(5340.43f, 4932.96f, 5.613094f),new Vector3(5336.769f, 4939.06f, 4.440734f),new Vector3(5333.578f, 4945f, 3.761134f),new Vector3(5330.904f, 4951.242f, 3.39259f),new Vector3(5328.759f, 4956.354f, 3.26597f),new Vector3(5326.715f, 4961.225f, 3.367292f),new Vector3(5325.113f, 4966.846f, 3.454799f),new Vector3(5324.397f, 4972.001f, 3.265907f),new Vector3(5322.971f, 4977.223f, 3.263854f),new Vector3(5321.088f, 4981.81f, 3.263854f),new Vector3(5318.901f, 4987.139f, 3.261801f),new Vector3(5316.75f, 4992.381f, 5.014274f),new Vector3(5314.722f, 4997.323f, 5.03174f),new Vector3(5313.161f, 5002.181f, 5.031124f),new Vector3(5314.07f, 5007.746f, 5.030644f),new Vector3(5318.059f, 5011.456f, 5.027657f),new Vector3(5322.933f, 5014.421f, 5.025451f),new Vector3(5329.253f, 5017.621f, 5.023398f),new Vector3(5333.935f, 5019.964f, 5.023398f),new Vector3(5339.196f, 5022.597f, 5.143652f),new Vector3(5343.989f, 5024.996f, 5.024568f),new Vector3(5348.3f, 5027.71f, 5.022515f),new Vector3(5350.357f, 5033.044f, 5.022515f),new Vector3(5349.708f, 5038.318f, 5.021979f),new Vector3(5347.652f, 5043.748f, 5.182763f),new Vector3(5345.885f, 5048.414f, 4.195067f),new Vector3(5343.489f, 5053.751f, 3.279729f),new Vector3(5340.443f, 5059.959f, 3.280967f),new Vector3(5337.892f, 5065.157f, 3.281033f),new Vector3(5334.856f, 5071.345f, 3.28059f),new Vector3(5332.244f, 5076.667f, 3.272146f),new Vector3(5329.527f, 5083.073f, 3.270093f),new Vector3(5327.578f, 5088.509f, 3.270093f),new Vector3(5325.753f, 5093.695f, 3.270093f),new Vector3(5324.056f, 5098.518f, 3.271727f),new Vector3(5322.313f, 5103.472f, 3.269673f),new Vector3(5320.421f, 5108.847f, 3.269673f),new Vector3(5318.698f, 5113.742f, 3.269673f),new Vector3(5316.585f, 5119.748f, 3.267216f),new Vector3(5314.765f, 5124.919f, 3.265781f),new Vector3(5312.834f, 5130.475f, 3.265781f),new Vector3(5311.446f, 5136.048f, 3.263728f),new Vector3(5309.893f, 5142.612f, 3.261674f),new Vector3(5308.584f, 5148.142f, 4.379142f),new Vector3(5307.599f, 5153.368f, 5.175577f),new Vector3(5307.929f, 5156.306f, 5.175577f),new Vector3(5552.188f, 4703.071f, 152.1366f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};        
            
                // Sorting closest nodes
                if (destination.Distance(shipyard1[MeshM.GetMeshIndex(shipyard1,destination)]) < 20f)
                {
                    return shipyard1;
                }
                location.AddRange(shipyard1);
                
                // To Shipwright...
                Vector3[] shipyard2 = new Vector3[]{new Vector3(5349f, 4950.358f, 3.802364f),new Vector3(5353.204f, 4955.653f, 3.886303f),new Vector3(5357.093f, 4961.37f, 4.008343f),new Vector3(5360.175f, 4965.997f, 4.657556f),new Vector3(5363.368f, 4970.791f, 5.674706f),new Vector3(5366.416f, 4975.366f, 6.654462f),new Vector3(5370.398f, 4980.844f, 6.889206f),new Vector3(5374.766f, 4985.673f, 6.557618f),new Vector3(5379.005f, 4989.384f, 6.19626f),new Vector3(5383.366f, 4992.575f, 5.75483f),new Vector3(5387.688f, 4995.335f, 5.459175f),new Vector3(5393.533f, 4999.057f, 5.446655f),new Vector3(5399.444f, 5002.762f, 4.555579f),new Vector3(5405.049f, 5006.448f, 3.842103f),new Vector3(5408.609f, 5010.051f, 3.315464f),new Vector3(5412.703f, 5014.114f, 3.033383f),new Vector3(5419.161f, 5016.997f, 2.776509f),new Vector3(5422.714f, 5021.32f, 2.574086f),new Vector3(5426.331f, 5027.247f, 2.382234f),new Vector3(5427.167f, 5032.982f, 1.649166f),new Vector3(5427.368f, 5036.041f, 2.040914f),new Vector3(5348.991f, 4950.346f, 3.800193f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
                
                // Sorting closest nodes
                if (destination.Distance(shipyard2[MeshM.GetMeshIndex(shipyard2,destination)]) < 20f)
                {
                    return shipyard2;
                }
                location.AddRange(shipyard2);
                
                // Draka Side
                Vector3[] shipyard3 = new Vector3[]{new Vector3(5298.561f, 5007.524f, 5.034952f),new Vector3(5293.754f, 5009.787f, 5.022318f),new Vector3(5287.687f, 5012.421f, 5.022318f),new Vector3(5282.411f, 5010.966f, 5.02351f),new Vector3(5276.688f, 5007.557f, 5.024453f),new Vector3(5271.221f, 5007.511f, 5.166054f),new Vector3(5266.201f, 5008.375f, 5.022333f),new Vector3(5262.005f, 5011.837f, 5.173682f),new Vector3(5258.382f, 5017.204f, 3.27872f),new Vector3(5256.102f, 5023.527f, 3.279911f),new Vector3(5254.268f, 5028.807f, 3.280935f),new Vector3(5252.101f, 5034.06f, 3.280935f),new Vector3(5250.056f, 5038.997f, 3.279541f),new Vector3(5248.036f, 5043.877f, 3.273189f),new Vector3(5245.917f, 5049.215f, 3.271136f),new Vector3(5244.502f, 5054.319f, 3.271136f),new Vector3(5243.146f, 5059.424f, 3.269083f),new Vector3(5241.521f, 5064.205f, 3.38149f),new Vector3(5239.152f, 5070.553f, 3.271645f),new Vector3(5236.75f, 5076.988f, 3.269592f),new Vector3(5234.881f, 5081.995f, 3.269592f),new Vector3(5232.475f, 5088.444f, 3.266353f),new Vector3(5230.676f, 5093.263f, 3.569005f),new Vector3(5229.174f, 5097.288f, 5.303953f),new Vector3(5299.104f, 5007.269f, 5.034922f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
                
                // Sorting closest nodes
                if (destination.Distance(shipyard3[MeshM.GetMeshIndex(shipyard3,destination)]) < 20f)
                {
                    return shipyard3;
                }
                location.AddRange(shipyard3);
                
            }
            
                 
        }
        else if (!factionIsHorde)
        {
            // Alliance only pathing
        }
        
        // Neutral Mesh Zones.
        // FFR
        
        // Top of Bladespire Tower
        Vector3[] list1 = new Vector3[]{new Vector3(6753.4f, 5831.2f, 325.2f),new Vector3(6751.9f, 5838.5f, 325.2f),new Vector3(6750.1f, 5845.8f, 325.2f),new Vector3(6748.2f, 5853.5f, 325.2f),new Vector3(6747.14f, 5864.272f, 325.2144f),new Vector3(6750.558f, 5868.425f, 325.3f),new Vector3(6754.004f, 5872.613f, 325.577f),new Vector3(6757.37f, 5876.702f, 327.131f),new Vector3(6760.591f, 5880.616f, 329.3791f),new Vector3(6763.806f, 5884.522f, 331.6271f),new Vector3(6767.086f, 5888.251f, 333.7519f),new Vector3(6770.712f, 5891.779f, 335.6977f),new Vector3(6774.749f, 5894.941f, 337.6636f),new Vector3(6778.867f, 5897.974f, 339.4899f),new Vector3(6783.058f, 5901.061f, 341.2484f),new Vector3(6787.525f, 5904.044f, 342.9428f),new Vector3(6791.396f, 5906.171f, 344.3062f),new Vector3(6796.32f, 5907.916f, 345.4648f),new Vector3(6801.521f, 5908.906f, 345.5328f),new Vector3(6806.66f, 5909.076f, 345.595f),new Vector3(6811.645f, 5909.226f, 345.6552f),new Vector3(6816.996f, 5908.966f, 345.6516f),new Vector3(6822.276f, 5908.371f, 345.6373f),new Vector3(6827.199f, 5907.703f, 345.6271f),new Vector3(6832.564f, 5906.975f, 345.6235f),new Vector3(6837.517f, 5906.261f, 345.6252f),new Vector3(6842.719f, 5904.869f, 345.6252f),new Vector3(6847.678f, 5902.918f, 345.6231f),new Vector3(6852.264f, 5900.667f, 345.6231f),new Vector3(6856.451f, 5897.707f, 345.619f),new Vector3(6860.334f, 5894.637f, 345.615f),new Vector3(6864.266f, 5891.529f, 345.7069f),new Vector3(6868.385f, 5888.272f, 345.9134f),new Vector3(6872.64f, 5884.909f, 346.127f),new Vector3(6876.644f, 5881.743f, 347.4779f),new Vector3(6880.64f, 5878.48f, 349.5873f),new Vector3(6884.797f, 5874.775f, 351.8573f),new Vector3(6888.743f, 5871.215f, 353.8832f),new Vector3(6892.48f, 5867.644f, 355.6541f),new Vector3(6895.507f, 5863.21f, 357.437f),new Vector3(6896.864f, 5858.185f, 359.261f),new Vector3(6897.297f, 5853.103f, 359.3959f),new Vector3(6897.503f, 5848.104f, 359.4045f),new Vector3(6898.049f, 5843.118f, 359.416f),new Vector3(6899.325f, 5838.245f, 359.4266f),new Vector3(6900.866f, 5833.063f, 359.4266f),new Vector3(6902.065f, 5827.81f, 359.4266f),new Vector3(6902.78f, 5822.517f, 359.4266f),new Vector3(6903.399f, 5817.293f, 359.4266f),new Vector3(6903.565f, 5812.093f, 359.4266f),new Vector3(6903.261f, 5806.599f, 359.4266f),new Vector3(6901.654f, 5801.547f, 359.4266f),new Vector3(6899.86f, 5796.926f, 359.4266f),new Vector3(6898.245f, 5791.815f, 359.4266f),new Vector3(6896.565f, 5787.006f, 359.4266f),new Vector3(6894.494f, 5782.473f, 359.4266f),new Vector3(6892.058f, 5777.597f, 359.4266f),new Vector3(6889.663f, 5772.822f, 361.2918f),new Vector3(6886.867f, 5768.245f, 364.0428f),new Vector3(6883.556f, 5764.44f, 366.7577f),new Vector3(6879.581f, 5760.998f, 369.5363f),new Vector3(6875.476f, 5757.76f, 372.3252f),new Vector3(6871.355f, 5754.535f, 375.2516f),new Vector3(6867.281f, 5751.399f, 378.0686f),new Vector3(6863.308f, 5748.341f, 380.2465f),new Vector3(6858.401f, 5745.633f, 382.8427f),new Vector3(6853.616f, 5743.494f, 385.2711f),new Vector3(6849.005f, 5741.433f, 387.5061f),new Vector3(6844.209f, 5739.289f, 389.9729f),new Vector3(6838.979f, 5737.593f, 392.6599f),new Vector3(6833.772f, 5736.631f, 395.3176f),new Vector3(6829.127f, 5735.95f, 397.7802f),new Vector3(6823.475f, 5735.712f, 400.8165f),new Vector3(6818.708f, 5737.63f, 401.7113f),new Vector3(6815.827f, 5741.921f, 401.7113f),new Vector3(6815.984f, 5747.142f, 403.5612f),new Vector3(6816.161f, 5752.174f, 405.9895f),new Vector3(6816.354f, 5757.667f, 409.2573f),new Vector3(6816.543f, 5763.042f, 410.1055f),new Vector3(6816.674f, 5767.981f, 410.1419f),new Vector3(6815.752f, 5773.287f, 410.149f),new Vector3(6813.101f, 5776.91f, 410.149f),new Vector3(6809.066f, 5779.963f, 410.149f),new Vector3(6804.994f, 5783.19f, 410.149f),new Vector3(6801.214f, 5786.705f, 410.149f),new Vector3(6797.824f, 5790.691f, 410.149f),new Vector3(6794.65f, 5794.466f, 410.149f),new Vector3(6791.104f, 5798.803f, 410.149f),new Vector3(6782.897f, 5818.26f, 410.149f),new Vector3(6782.256f, 5823.623f, 410.149f),new Vector3(6782.208f, 5828.922f, 410.149f),new Vector3(6782.726f, 5833.742f, 410.149f),new Vector3(6783.45f, 5838.841f, 410.149f),new Vector3(6784.207f, 5844.12f, 410.149f),new Vector3(6785.179f, 5849.452f, 410.2917f),new Vector3(6786.109f, 5854.333f, 410.4536f),new Vector3(6787f, 5859.008f, 410.6021f),new Vector3(6788.001f, 5864.262f, 410.9413f),new Vector3(6788.988f, 5869.438f, 413.0421f),new Vector3(6789.754f, 5874.5f, 414.14f),new Vector3(6789.875f, 5879.736f, 415.1671f),new Vector3(6790.051f, 5885.129f, 416.3246f),new Vector3(6752.3f, 5822.8f, 325.2f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        // Special Node on edge of Mesh is the last Vector point.
        
        // Sorting closest nodes
        if (destination.Distance(list1[MeshM.GetMeshIndex(list1,destination)]) < 20f)
        {
            return list1;
        }
        location.AddRange(list1);
        
        // SPIRES OF ARAK MESHES
        // Begin
        
        // Excavation Site Cave
        Vector3[] spires0 = new Vector3[]{new Vector3(338.891f, 2577.716f, 2.268729f),new Vector3(338.6248f, 2581.788f, 0.08062831f),new Vector3(338.1676f, 2586.024f, -3.987406f),new Vector3(337.6074f, 2590.052f, -7.307508f),new Vector3(337.0799f, 2593.845f, -10.17533f),new Vector3(336.538f, 2597.741f, -12.68579f),new Vector3(336.0627f, 2601.517f, -15.10495f),new Vector3(336.487f, 2605.618f, -17.46917f),new Vector3(337.3998f, 2609.445f, -19.5675f),new Vector3(338.3801f, 2613.167f, -21.59628f),new Vector3(339.6005f, 2617.259f, -23.41826f),new Vector3(339.3583f, 2621.23f, -24.92791f),new Vector3(338.4436f, 2625.059f, -26.26554f),new Vector3(336.9464f, 2628.66f, -26.22164f),new Vector3(334.0219f, 2631.467f, -26.09918f),new Vector3(330.4635f, 2632.206f, -26.1187f),new Vector3(327.9126f, 2634.745f, -26.69917f),new Vector3(328.7146f, 2638.71f, -27.50774f),new Vector3(330.7381f, 2641.759f, -27.53174f),new Vector3(334.322f, 2643.482f, -27.56156f),new Vector3(337.8228f, 2645.118f, -27.89514f),new Vector3(340.4143f, 2648.231f, -28.3458f),new Vector3(341.4643f, 2652.078f, -28.66519f),new Vector3(342.0589f, 2656.156f, -29.0003f),new Vector3(342.4951f, 2659.995f, -29.29947f),new Vector3(342.9425f, 2663.931f, -29.60101f),new Vector3(343.8925f, 2667.751f, -29.41385f),new Vector3(346.6919f, 2670.595f, -29.3398f),new Vector3(350.1514f, 2672.129f, -28.74219f),new Vector3(354.0805f, 2671.495f, -28.47561f),new Vector3(358.2747f, 2670.732f, -28.15352f),new Vector3(360.1824f, 2670.385f, -28.15647f),new Vector3(339.0786f, 2571.982f, 1.496477f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(spires0[MeshM.GetMeshIndex(spires0,destination)]) < 20f)
        {
            return spires0;
        }
        location.AddRange(spires0);
        
        // Bladefist Hold
        
        Vector3[] spires1 = new Vector3[]{new Vector3(289.1144f, 2991.784f, 99.24602f),new Vector3(290.6524f, 2993.787f, 99.24757f),new Vector3(291.8106f, 2995.296f, 99.24757f),new Vector3(293.3439f, 2997.313f, 99.24757f),new Vector3(294.4702f, 2998.958f, 99.24757f),new Vector3(295.7326f, 3001.17f, 99.24613f),new Vector3(295.8652f, 3003.621f, 99.64617f),new Vector3(293.9801f, 3005.492f, 99.37365f),new Vector3(291.4074f, 3005.846f, 99.24386f),new Vector3(289.1835f, 3004.807f, 99.24622f),new Vector3(282.3922f, 2997.344f, 109.8361f),new Vector3(280.6793f, 2995.18f, 111.5376f),new Vector3(281.5001f, 2992.834f, 111.5376f),new Vector3(283.7205f, 2991.219f, 111.5362f),new Vector3(286.0921f, 2990.299f, 111.5365f),new Vector3(287.9625f, 2990.179f, 111.5365f),new Vector3(289.7531f, 2990.582f, 111.5365f),new Vector3(291.9908f, 2991.869f, 111.5359f),new Vector3(294.2418f, 2993.39f, 114.5833f),new Vector3(296.282f, 2995.114f, 117.6228f),new Vector3(297.5919f, 2997.263f, 117.9392f),new Vector3(297.1404f, 2999.804f, 118.4341f),new Vector3(295.8502f, 3001.606f, 120.9697f),new Vector3(293.6924f, 3003.637f, 124.3661f),new Vector3(291.7794f, 3005.402f, 127.3554f),new Vector3(289.8022f, 3007.022f, 129.2047f),new Vector3(287.3717f, 3007.595f, 129.2242f),new Vector3(285.1911f, 3006.392f, 130.1411f),new Vector3(283.9044f, 3004.119f, 133.0507f),new Vector3(283.2963f, 3001.66f, 135.589f),new Vector3(282.6289f, 2999.057f, 135.7237f),new Vector3(283.3936f, 2996.905f, 135.68f),new Vector3(286.0615f, 2995.885f, 135.6283f),new Vector3(288.8054f, 2995.561f, 135.6283f),new Vector3(290.6443f, 2995.378f, 135.6292f),new Vector3(293.2289f, 2995.016f, 135.6299f),new Vector3(295.6766f, 2993.942f, 135.6284f),new Vector3(287.7999f, 2990.075f, 99.77257f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(spires1[MeshM.GetMeshIndex(spires1,destination)]) < 20f)
        {
            return spires1;
        }
        location.AddRange(spires1);
        
        // DreadTalon Peak
        
        Vector3[] spires2 = new Vector3[]{new Vector3(-938.1581f, 1356.648f, 83.81377f),new Vector3(-945.0508f, 1361.751f, 89.67353f),new Vector3(-951.4911f, 1367.873f, 96.7405f),new Vector3(-957.843f, 1373.769f, 103.3774f),new Vector3(-965.2641f, 1378.82f, 109.7939f),new Vector3(-972.5145f, 1383.104f, 116.222f),new Vector3(-980.2394f, 1386.752f, 124.1975f),new Vector3(-988.1982f, 1390.152f, 131.3108f),new Vector3(-996.0224f, 1392.654f, 136.5113f),new Vector3(-1004.523f, 1391.784f, 140.7674f),new Vector3(-1010.789f, 1385.956f, 146.8425f),new Vector3(-1016.757f, 1379.561f, 154.7695f),new Vector3(-1022.55f, 1372.282f, 161.927f),new Vector3(-1027.535f, 1365.339f, 167.7357f),new Vector3(-1033.144f, 1358.795f, 171.7159f),new Vector3(-1039.748f, 1353.869f, 175.1419f),new Vector3(-1047.786f, 1350.167f, 181.5818f),new Vector3(-1055.992f, 1352.119f, 188.7863f),new Vector3(-1062.771f, 1356.625f, 196.8043f),new Vector3(-1071.155f, 1360.426f, 201.7506f),new Vector3(-1079.98f, 1360.762f, 206.0081f),new Vector3(-1086.952f, 1364.616f, 211.6831f),new Vector3(-1093.606f, 1370.542f, 217.4919f),new Vector3(-1101.305f, 1375.844f, 221.8519f),new Vector3(-1106.905f, 1381.807f, 225.1934f),new Vector3(-1110.454f, 1389.738f, 228.7881f),new Vector3(-1112.032f, 1398.174f, 232.0307f),new Vector3(-1112.023f, 1406.524f, 235.1222f),new Vector3(-1112.668f, 1415.225f, 237.0747f),new Vector3(-1119.486f, 1419.5f, 238.8293f),new Vector3(-1127.93f, 1423.058f, 241.1306f),new Vector3(-1135.57f, 1426.303f, 242.8258f),new Vector3(-1143.81f, 1427.474f, 244.4146f),new Vector3(-1151.742f, 1423.833f, 246.3679f),new Vector3(-1157.908f, 1417.537f, 248.0946f),new Vector3(-1158.939f, 1414.7f, 248.7816f),new Vector3(-1161.737f, 1411.573f, 249.5107f),new Vector3(-1166.288f, 1406.657f, 250.3202f),new Vector3(-1034.525f, 1510.983f, 105.9146f),new Vector3(-1028.871f, 1504.498f, 105.6056f),new Vector3(-1023.227f, 1498.328f, 106.1032f),new Vector3(-1017.953f, 1490.689f, 107.8743f),new Vector3(-1015.623f, 1483.611f, 110.2874f),new Vector3(-1013.957f, 1474.546f, 114.2917f),new Vector3(-1013.915f, 1466.258f, 117.9465f),new Vector3(-1014.655f, 1457.011f, 122.466f),new Vector3(-1015.337f, 1448.493f, 126.8028f),new Vector3(-1015.718f, 1439.629f, 130.3219f),new Vector3(-1014.317f, 1430.965f, 133.1253f),new Vector3(-1011.879f, 1422.39f, 135.2564f),new Vector3(-1009.5f, 1413.736f, 136.6034f),new Vector3(-1009.005f, 1411.621f, 137.0241f),new Vector3(-1168.623f, 1397.482f, 251.2832f),new Vector3(-1168.821f, 1390.802f, 252.0301f),new Vector3(-1168.974f, 1385.629f, 252.4444f),new Vector3(-1169.181f, 1378.672f, 252.235f),new Vector3(-1169.379f, 1371.96f, 251.7421f),new Vector3(-1169.502f, 1367.819f, 251.7421f),new Vector3(-1152.131f, 1553.188f, 102.7806f),new Vector3(-1155.145f, 1548.665f, 107.9084f),new Vector3(-1157.569f, 1544.144f, 112.6218f),new Vector3(-1159.854f, 1539.15f, 116.8331f),new Vector3(-1162.008f, 1534.581f, 120.9107f),new Vector3(-1164.961f, 1529.303f, 126.733f),new Vector3(-1166.75f, 1528.729f, 128.5803f),new Vector3(-1167.838f, 1528.002f, 130.053f),new Vector3(-1167.508f, 1528.519f, 129.3746f),new Vector3(-1167.759f, 1529.296f, 129.1156f),new Vector3(-1168.354f, 1529.172f, 129.7551f),new Vector3(-1170.949f, 1529.352f, 132.2145f),new Vector3(-1175.172f, 1524.027f, 138.1736f),new Vector3(-1175.887f, 1522.986f, 139.3329f),new Vector3(-1178.457f, 1521.47f, 141.4258f),new Vector3(-1182.415f, 1518.32f, 146.5072f),new Vector3(-1186.202f, 1514.507f, 152.1189f),new Vector3(-1189.821f, 1510.851f, 157.8385f),new Vector3(-1193.376f, 1507.003f, 161.5621f),new Vector3(-1197.852f, 1502.386f, 164.5315f),new Vector3(-1201.403f, 1498.207f, 167.0099f),new Vector3(-1202.338f, 1497.849f, 167.0379f),new Vector3(-1206.001f, 1497.155f, 168.3185f),new Vector3(-1208.809f, 1493.474f, 171.0938f),new Vector3(-1209.576f, 1492.086f, 172.141f),new Vector3(-1211.163f, 1486.684f, 176.9058f),new Vector3(-1209.262f, 1480.488f, 181.4614f),new Vector3(-1206.406f, 1475.942f, 185.4455f),new Vector3(-1205.065f, 1470.859f, 188.4053f),new Vector3(-1202.32f, 1466.643f, 190.8224f),new Vector3(-1196.98f, 1462.223f, 194.2806f),new Vector3(-1194.011f, 1456.955f, 199.3957f),new Vector3(-1191.629f, 1453.988f, 203.2612f),new Vector3(-1191.942f, 1450.391f, 206.6494f),new Vector3(-1192.917f, 1445.407f, 211.9252f),new Vector3(-1196.323f, 1439.62f, 217.0078f),new Vector3(-1197.286f, 1434.767f, 222.4267f),new Vector3(-1196.849f, 1429.688f, 228.131f),new Vector3(-1197.3f, 1422.731f, 236.2064f),new Vector3(-1197.629f, 1416.07f, 242.6445f),new Vector3(-1193.285f, 1410.737f, 246.7132f),new Vector3(-1187.04f, 1408.531f, 249.2644f),new Vector3(-1180.402f, 1408.978f, 250.0737f),new Vector3(-1174.36f, 1410.651f, 249.854f),new Vector3(-1172.456f, 1410.625f, 249.8732f),new Vector3(-1169.969f, 1410.099f, 249.903f),new Vector3(-928.4242f, 1350.516f, 75.26851f),new Vector3(1f,1f,1f),new Vector3(0f,0f,0f)};

        if (destination.Distance(spires2[MeshM.GetMeshIndex(spires2,destination)]) < 20f)
        {
            return spires2;
        }
        location.AddRange(spires2);
        
        // Dreatalon Peak 2
        Vector3[] spires3 = new Vector3[]{new Vector3(-1249.919f, 1578.377f, 58.38723f),new Vector3(-1254.589f, 1575.748f, 58.91277f),new Vector3(-1259.372f, 1573.007f, 60.22863f),new Vector3(-1264.608f, 1568.881f, 62.43041f),new Vector3(-1268.3f, 1564.976f, 64.21636f),new Vector3(-1273.014f, 1559.667f, 67.32333f),new Vector3(-1277.079f, 1554.383f, 71.18523f),new Vector3(-1279.851f, 1549.828f, 74.74048f),new Vector3(-1280.722f, 1545.606f, 77.96752f),new Vector3(-1279.805f, 1543.105f, 79.60947f),new Vector3(-1278.478f, 1539.757f, 81.72559f),new Vector3(-1275.833f, 1534.693f, 85.64197f),new Vector3(-1273.326f, 1529.904f, 89.88501f),new Vector3(-1272.076f, 1528.798f, 90.99051f),new Vector3(-1267.499f, 1526.543f, 94.34116f),new Vector3(-1262.886f, 1526.249f, 98.60416f),new Vector3(-1258.596f, 1526.592f, 101.6059f),new Vector3(-1254.308f, 1527.141f, 104.5988f),new Vector3(-1252.894f, 1527.573f, 105.5788f),new Vector3(-1248.905f, 1529.68f, 109.9599f),new Vector3(-1242.121f, 1530.564f, 116.0125f),new Vector3(-1237.052f, 1529.994f, 118.2921f),new Vector3(-1235.32f, 1527.684f, 120.0156f),new Vector3(-1234.342f, 1524.151f, 122.6437f),new Vector3(-1237.365f, 1519.414f, 124.2992f),new Vector3(-1239.771f, 1515.837f, 125.187f),new Vector3(-1242.219f, 1513.473f, 125.4778f),new Vector3(-1247.207f, 1508.707f, 128.8725f),new Vector3(-1251.98f, 1504.205f, 135.6353f),new Vector3(-1255.724f, 1498.707f, 142.1626f),new Vector3(-1257.005f, 1493.263f, 146.4317f),new Vector3(-1257.221f, 1487.84f, 150.6722f),new Vector3(-1257.184f, 1481.803f, 154.3188f),new Vector3(-1255.651f, 1474.333f, 157.5402f),new Vector3(-1254.765f, 1469.246f, 160.0568f),new Vector3(-1257.9f, 1463.409f, 164.9113f),new Vector3(-1260.761f, 1459.058f, 169.4069f),new Vector3(-1266.273f, 1454.901f, 175.1942f),new Vector3(-1270.913f, 1452.407f, 176.6154f),new Vector3(-1274.789f, 1448.867f, 177.7755f),new Vector3(-1278.103f, 1444.535f, 181.6769f),new Vector3(-1281.588f, 1439.949f, 183.0789f),new Vector3(-1283.335f, 1434.738f, 184.3366f),new Vector3(-1285.118f, 1433.245f, 184.6071f),new Vector3(-1286.594f, 1432.008f, 184.6871f),new Vector3(-1285.651f, 1428.036f, 185.3112f),new Vector3(-1285.469f, 1422.635f, 186.311f),new Vector3(-1284.36f, 1417.193f, 186.7944f),new Vector3(-1282.726f, 1412.009f, 188.0256f),new Vector3(-1281.825f, 1406.771f, 190.114f),new Vector3(-1281.863f, 1401.507f, 193.0874f),new Vector3(-1281.815f, 1396.117f, 195.7943f),new Vector3(-1279.808f, 1389.55f, 198.5414f),new Vector3(-1277.442f, 1383.03f, 201.9822f),new Vector3(-1274.872f, 1378.17f, 203.613f),new Vector3(-1270.913f, 1373.016f, 206.6004f),new Vector3(-1267.052f, 1369.144f, 209.427f),new Vector3(-1264.107f, 1364.632f, 212.5716f),new Vector3(-1262.399f, 1357.934f, 216.0011f),new Vector3(-1261.045f, 1351.358f, 216.0745f),new Vector3(-1260.654f, 1349.836f, 216.0651f),new Vector3(-1255.141f, 1349.805f, 216.8036f),new Vector3(-1248.14f, 1349.766f, 219.6463f),new Vector3(-1242.648f, 1349.411f, 219.7145f),new Vector3(-1238.043f, 1348.766f, 219.6578f),new Vector3(-1230.895f, 1347.483f, 218.3857f),new Vector3(-1225.065f, 1343.918f, 217.3749f),new Vector3(-1219.705f, 1339.722f, 217.2884f),new Vector3(-1215.909f, 1336.39f, 216.9274f),new Vector3(-1211.905f, 1332.556f, 216.5505f),new Vector3(-1206.876f, 1327.743f, 217.1481f),new Vector3(-1202.89f, 1324.588f, 217.4571f),new Vector3(-1197.575f, 1322.476f, 217.3469f),new Vector3(-1191.488f, 1321.311f, 217.3591f),new Vector3(-1188.802f, 1321.851f, 217.307f),new Vector3(-1185.526f, 1322.55f, 217.2872f),new Vector3(-1183.055f, 1323.108f, 217.1782f),new Vector3(-1180.554f, 1324.106f, 217.0154f),new Vector3(-1177.472f, 1325.475f, 216.9002f),new Vector3(-1175.161f, 1326.792f, 216.7945f),new Vector3(-1172.855f, 1329.113f, 216.4217f),new Vector3(-1170.641f, 1331.759f, 215.6149f),new Vector3(-1168.916f, 1333.82f, 215.0721f),new Vector3(-1167.204f, 1335.984f, 214.6554f),new Vector3(-1166.707f, 1338.563f, 214.1811f),new Vector3(-1166.776f, 1341.272f, 213.6282f),new Vector3(-1166.85f, 1344.12f, 213.428f),new Vector3(-1166.94f, 1347.599f, 213.1799f),new Vector3(-1167.025f, 1350.917f, 213.3239f),new Vector3(-1167.105f, 1354.013f, 213.7093f),new Vector3(-1167.174f, 1356.699f, 214.3127f),new Vector3(-1167.244f, 1359.401f, 214.4832f),new Vector3(-1167.332f, 1362.826f, 213.8588f),new Vector3(-1167.364f, 1365.556f, 213.7726f),new Vector3(-1167.436f, 1368.301f, 213.585f),new Vector3(-1168.132f, 1370.849f, 213.585f),new Vector3(-1169.438f, 1373.126f, 213.585f),new Vector3(-1170.383f, 1375.589f, 213.8542f),new Vector3(-1170.01f, 1378.224f, 213.5912f),new Vector3(-1168.263f, 1381.11f, 213.9674f),new Vector3(-1165.731f, 1383.147f, 213.3538f),new Vector3(-1164.202f, 1384.591f, 214.2886f),new Vector3(-1163.413f, 1386.099f, 214.3164f),new Vector3(-1162.786f, 1387.682f, 214.6256f),new Vector3(-1162.333f, 1388.996f, 214.6241f),new Vector3(-1161.883f, 1390.303f, 214.6348f),new Vector3(-1161.601f, 1391.122f, 214.6893f),new Vector3(-1243.145f, 1581.6f, 58.72332f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(spires3[MeshM.GetMeshIndex(spires3,destination)]) < 20f)
        {
            return spires3;
        }
        location.AddRange(spires3);
        
        // NAGRAND START
                
        // SpiteLeaf Burrow
        
        Vector3[] spiteleaf0 = new Vector3[]{new Vector3(3994.223f, 4534.436f, 65.90241f),new Vector3(3996.198f, 4535.763f, 66.1256f),new Vector3(3998.187f, 4537.303f, 65.6893f),new Vector3(4000.042f, 4539.11f, 64.21821f),new Vector3(4001.818f, 4540.878f, 61.9125f),new Vector3(4003.887f, 4543.187f, 58.89199f),new Vector3(4005.42f, 4545.079f, 57.44863f),new Vector3(4007.011f, 4547.043f, 54.71817f),new Vector3(4008.491f, 4548.871f, 53.08488f),new Vector3(4010.029f, 4550.769f, 51.53321f),new Vector3(4011.593f, 4552.7f, 49.99795f),new Vector3(4013.719f, 4555.004f, 48.09978f),new Vector3(4015.685f, 4556.466f, 46.8299f),new Vector3(4017.996f, 4557.665f, 45.43013f),new Vector3(4020.199f, 4558.75f, 44.10686f),new Vector3(4022.92f, 4560.054f, 42.4797f),new Vector3(4025.176f, 4561.079f, 41.35865f),new Vector3(4027.298f, 4562.043f, 40.37826f),new Vector3(4029.573f, 4563.077f, 39.35577f),new Vector3(4032.377f, 4564.353f, 38.1398f),new Vector3(4034.609f, 4565.461f, 37.1548f),new Vector3(4037.283f, 4566.886f, 36.64151f),new Vector3(4039.25f, 4568.071f, 36.34431f),new Vector3(4041.454f, 4569.405f, 36.01118f),new Vector3(4043.621f, 4570.731f, 35.68319f),new Vector3(4045.685f, 4572.026f, 35.36956f),new Vector3(4047.683f, 4573.279f, 35.09238f),new Vector3(4050.186f, 4574.987f, 34.93277f),new Vector3(4051.558f, 4575.98f, 34.84603f),new Vector3(4052.513f, 4576.672f, 34.78596f),new Vector3(4053.777f, 4577.588f, 34.69561f),new Vector3(4054.965f, 4578.448f, 34.59603f),new Vector3(4056.008f, 4579.204f, 34.5103f),new Vector3(4056.966f, 4579.898f, 34.42818f),new Vector3(4057.944f, 4580.606f, 34.34604f),new Vector3(4058.913f, 4581.309f, 34.27059f),new Vector3(4059.9f, 4582.023f, 34.22078f),new Vector3(4060.886f, 4582.737f, 34.17355f),new Vector3(4061.839f, 4583.427f, 34.12735f),new Vector3(4063.123f, 4584.357f, 34.08064f),new Vector3(4064.078f, 4585.049f, 34.06318f),new Vector3(4065.073f, 4585.77f, 34.04367f),new Vector3(4066.314f, 4586.669f, 34.01954f),new Vector3(4067.284f, 4587.372f, 34.00053f),new Vector3(4068.253f, 4588.074f, 33.98256f),new Vector3(4069.374f, 4588.55f, 34.00925f),new Vector3(4070.575f, 4588.792f, 34.12089f),new Vector3(4071.837f, 4589.1f, 34.37462f),new Vector3(4072.651f, 4590.324f, 34.59344f),new Vector3(4073.327f, 4591.341f, 34.77529f),new Vector3(4074.429f, 4593f, 35.0717f),new Vector3(4075.016f, 4593.426f, 35.20709f),new Vector3(3993.148f, 4533.713f, 65.64765f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(spiteleaf0[MeshM.GetMeshIndex(spiteleaf0,destination)]) < 20f)
        {
            return spiteleaf0;
        }
        location.AddRange(spiteleaf0);
        
        // Sanctum of the Naaru
        
        Vector3[] sanctum0 = new Vector3[]{new Vector3(2559.472f, 6431.367f, -40.39657f),new Vector3(2557.49f, 6432.889f, -38.99073f),new Vector3(2555.48f, 6434.431f, -38.16496f),new Vector3(2553.437f, 6436f, -37.61134f),new Vector3(2551.505f, 6437.483f, -37.72248f),new Vector3(2549.582f, 6438.956f, -38.42722f),new Vector3(2546.867f, 6440.43f, -39.64117f),new Vector3(2545.528f, 6440.745f, -40.61437f),new Vector3(2543.055f, 6441.104f, -42.65524f),new Vector3(2540.245f, 6441.512f, -44.96276f),new Vector3(2540.162f, 6441.391f, -44.97508f),new Vector3(2539.668f, 6440.695f, -45.05002f),new Vector3(2538.594f, 6439.853f, -45.23328f),new Vector3(2537.685f, 6439.141f, -45.38881f),new Vector3(2537.222f, 6439.301f, -45.7358f),new Vector3(2536.778f, 6439.568f, -45.76352f),new Vector3(2536.656f, 6439.739f, -45.85026f),new Vector3(2535.865f, 6440.843f, -46.40923f),new Vector3(2534.732f, 6442.425f, -47.00924f),new Vector3(2533.355f, 6444.03f, -47.31773f),new Vector3(2531.707f, 6445.319f, -47.39296f),new Vector3(2530.215f, 6446.458f, -46.95063f),new Vector3(2528.128f, 6447.932f, -46.79946f),new Vector3(2525.739f, 6449.762f, -47.38984f),new Vector3(2524.004f, 6451.579f, -48.8168f),new Vector3(2522.16f, 6453.128f, -49.31881f),new Vector3(2520.294f, 6454.693f, -49.8388f),new Vector3(2518.449f, 6456.241f, -50.35161f),new Vector3(2516.405f, 6457.954f, -50.45631f),new Vector3(2514.075f, 6459.904f, -50.36166f),new Vector3(2512.539f, 6461.788f, -50.32366f),new Vector3(2511.013f, 6464.461f, -50.33904f),new Vector3(2509.942f, 6467.289f, -50.0704f),new Vector3(2509.116f, 6469.617f, -49.52501f),new Vector3(2507.611f, 6472.252f, -48.01126f),new Vector3(2505.154f, 6473.972f, -46.71338f),new Vector3(2502.98f, 6474.923f, -45.66937f),new Vector3(2499.914f, 6475.912f, -44.47381f),new Vector3(2497.531f, 6476.138f, -43.82327f),new Vector3(2494.469f, 6476.783f, -43.19838f),new Vector3(2492.312f, 6477.972f, -42.45356f),new Vector3(2490.958f, 6479.925f, -41.942f),new Vector3(2490.157f, 6482.9f, -40.94228f),new Vector3(2489.586f, 6485.325f, -40.00847f),new Vector3(2489.265f, 6487.592f, -38.46807f),new Vector3(2489.193f, 6490.097f, -37.3566f),new Vector3(2489.105f, 6493.183f, -36.15212f),new Vector3(2489.343f, 6496.319f, -34.73877f),new Vector3(2490.208f, 6498.604f, -33.76228f),new Vector3(2491.133f, 6501.031f, -31.51007f),new Vector3(2491.979f, 6503.248f, -29.29246f),new Vector3(2492.88f, 6505.617f, -27.20348f),new Vector3(2493.54f, 6508.056f, -25.33065f),new Vector3(2493.514f, 6510.456f, -23.30589f),new Vector3(2493.196f, 6512.8f, -21.39356f),new Vector3(2492.849f, 6515.367f, -19.49675f),new Vector3(2492.528f, 6517.732f, -18.02001f),new Vector3(2491.74f, 6520.765f, -15.87606f),new Vector3(2490.306f, 6523.334f, -15.62134f),new Vector3(2488.79f, 6525.434f, -16.02947f),new Vector3(2487.414f, 6527.339f, -16.69699f),new Vector3(2485.927f, 6529.399f, -17.57576f),new Vector3(2484.573f, 6531.407f, -18.40473f),new Vector3(2483.219f, 6533.446f, -19.25252f),new Vector3(2481.691f, 6536.148f, -20.46289f),new Vector3(2480.594f, 6538.316f, -21.54952f),new Vector3(2479.548f, 6540.384f, -21.7268f),new Vector3(2478.407f, 6542.639f, -21.66124f),new Vector3(2477.273f, 6544.881f, -22.0715f),new Vector3(2476.17f, 6547.061f, -22.1275f),new Vector3(2475.007f, 6549.359f, -22.2166f),new Vector3(2473.901f, 6551.545f, -22.1531f),new Vector3(2472.833f, 6553.657f, -22.09249f),new Vector3(2471.455f, 6556.38f, -22.01338f),new Vector3(2470.265f, 6558.608f, -21.94696f),new Vector3(2468.854f, 6560.608f, -21.878f),new Vector3(2467.239f, 6562.713f, -21.80188f),new Vector3(2466.006f, 6564.821f, -21.73615f),new Vector3(2464.357f, 6567.62f, -21.64851f),new Vector3(2462.778f, 6570.19f, -21.56626f),new Vector3(2461.467f, 6572.326f, -21.49869f),new Vector3(2459.83f, 6574.763f, -21.41692f),new Vector3(2457.406f, 6575.342f, -21.34211f),new Vector3(2561.373f, 6429.908f, -40.65923f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(sanctum0[MeshM.GetMeshIndex(sanctum0,destination)]) < 20f)
        {
            return sanctum0;
        }
        location.AddRange(sanctum0);
        
        // Ironfist Harbor Tower
        
        Vector3[] harbor0 = new Vector3[]{new Vector3(2047.983f, 7003.184f, 15.20204f),new Vector3(2046.855f, 7004.531f, 15.20204f),new Vector3(2045.344f, 7006.334f, 15.20204f),new Vector3(2043.888f, 7007.389f, 15.20407f),new Vector3(2042.898f, 7008.774f, 15.2065f),new Vector3(2041.801f, 7011.029f, 14.6789f),new Vector3(2040.426f, 7013.045f, 14.68103f),new Vector3(2039.017f, 7015.109f, 14.68152f),new Vector3(2037.693f, 7017.036f, 14.68152f),new Vector3(2036.046f, 7018.86f, 14.68152f),new Vector3(2034.626f, 7019.855f, 14.68152f),new Vector3(2032.258f, 7020.543f, 14.67818f),new Vector3(2030.141f, 7019.542f, 14.67818f),new Vector3(2029.698f, 7017.132f, 14.67937f),new Vector3(2029.751f, 7014.685f, 14.72704f),new Vector3(2030.485f, 7012.493f, 17.18337f),new Vector3(2031.81f, 7010.394f, 20.05098f),new Vector3(2032.631f, 7008.719f, 22.17327f),new Vector3(2033.565f, 7006.607f, 24.79284f),new Vector3(2034.296f, 7005.11f, 26.46237f),new Vector3(2035.774f, 7003.25f, 26.97196f),new Vector3(2036.505f, 7003.571f, 26.97196f),new Vector3(2038.682f, 7004.67f, 26.97196f),new Vector3(2040.319f, 7006.298f, 26.97022f),new Vector3(2042.045f, 7007.984f, 26.97022f),new Vector3(2043.061f, 7009.33f, 26.97022f),new Vector3(2043.281f, 7010.629f, 26.97022f),new Vector3(2042.82f, 7011.541f, 26.97022f),new Vector3(2041.548f, 7013.708f, 26.96974f),new Vector3(2040.564f, 7015.727f, 28.55593f),new Vector3(2039.611f, 7017.915f, 31.27256f),new Vector3(2038.633f, 7020.161f, 33.34654f),new Vector3(2038.221f, 7021.062f, 33.3643f),new Vector3(2036.59f, 7020.848f, 33.36908f),new Vector3(2034.352f, 7020.276f, 35.3704f),new Vector3(2032.184f, 7019.299f, 38.0968f),new Vector3(2030.087f, 7018.296f, 40.76545f),new Vector3(2028.071f, 7017.275f, 43.37678f),new Vector3(2026.419f, 7015.612f, 44.63928f),new Vector3(2026.353f, 7015.405f, 44.63928f),new Vector3(2026.429f, 7014.985f, 44.63723f),new Vector3(2026.972f, 7012.708f, 44.94955f),new Vector3(2027.704f, 7011.157f, 46.80347f),new Vector3(2028.685f, 7009.497f, 48.95367f),new Vector3(2030.707f, 7007.671f, 51.15488f),new Vector3(2031.316f, 7007.539f, 51.15553f),new Vector3(2033.724f, 7007.177f, 51.18433f),new Vector3(2036.127f, 7007.484f, 51.06267f),new Vector3(2038.372f, 7008.149f, 51.06267f),new Vector3(2038.8f, 7008.44f, 51.06267f),new Vector3(2039.943f, 7010.912f, 51.06267f),new Vector3(2040.875f, 7013.056f, 51.06267f),new Vector3(2041.617f, 7014.763f, 51.06267f),new Vector3(2041.534f, 7014.994f, 51.06267f),new Vector3(2040.932f, 7016.622f, 51.06267f),new Vector3(2040.547f, 7018.965f, 51.06267f),new Vector3(2040.697f, 7019.13f, 51.06267f),new Vector3(2048.194f, 7002.932f, 15.20204f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(harbor0[MeshM.GetMeshIndex(harbor0,destination)]) < 20f)
        {
            return harbor0;
        }
        location.AddRange(harbor0);
        
        //Ironfist Harbor Hold
        
        Vector3[] harbor1 = new Vector3[]{new Vector3(2195.89f, 7109.55f, 2.310153f),new Vector3(2197.538f, 7111.315f, 2.079771f),new Vector3(2199.196f, 7113.09f, 2.98473f),new Vector3(2200.859f, 7114.871f, 4.011428f),new Vector3(2202.421f, 7116.543f, 5.027403f),new Vector3(2204.17f, 7118.416f, 6.15337f),new Vector3(2205.813f, 7120.176f, 7.206852f),new Vector3(2207.447f, 7121.926f, 8.233192f),new Vector3(2209.067f, 7123.66f, 9.245238f),new Vector3(2211.222f, 7125.967f, 9.276951f),new Vector3(2213.319f, 7128.213f, 9.215099f),new Vector3(2215.13f, 7130.152f, 9.162229f),new Vector3(2216.778f, 7131.917f, 9.114234f),new Vector3(2218.422f, 7133.677f, 9.85614f),new Vector3(2220.084f, 7135.458f, 11.01722f),new Vector3(2222.225f, 7137.75f, 12.51174f),new Vector3(2224.27f, 7139.939f, 13.90197f),new Vector3(2225.961f, 7141.75f, 14.98079f),new Vector3(2227.633f, 7143.541f, 16.18132f),new Vector3(2229.659f, 7145.71f, 17.52109f),new Vector3(2231.393f, 7147.567f, 17.5439f),new Vector3(2233.491f, 7149.813f, 17.42789f),new Vector3(2235.153f, 7151.593f, 17.30624f),new Vector3(2236.94f, 7153.506f, 17.30624f),new Vector3(2239.109f, 7155.829f, 17.30624f),new Vector3(2240.801f, 7157.64f, 17.19666f),new Vector3(2242.482f, 7159.441f, 17.11402f),new Vector3(2244.608f, 7161.718f, 16.65282f),new Vector3(2246.257f, 7163.483f, 16.65282f),new Vector3(2248.068f, 7165.422f, 16.65282f),new Vector3(2249.745f, 7167.217f, 16.65282f),new Vector3(2251.465f, 7169.059f, 16.65282f),new Vector3(2253.548f, 7171.29f, 16.65282f),new Vector3(2255.163f, 7173.019f, 16.65282f),new Vector3(2256.811f, 7174.784f, 16.65282f),new Vector3(2258.598f, 7176.697f, 16.65282f),new Vector3(2260.232f, 7178.447f, 16.65282f),new Vector3(2262.324f, 7180.688f, 16.65282f),new Vector3(2264.436f, 7182.949f, 17.12524f),new Vector3(2266.099f, 7184.73f, 18.68124f),new Vector3(2268.154f, 7186.93f, 20.99634f),new Vector3(2269.788f, 7188.68f, 22.85462f),new Vector3(2271.852f, 7190.89f, 25.33489f),new Vector3(2273.875f, 7193.267f, 27.87538f),new Vector3(2274.603f, 7195.599f, 28.5933f),new Vector3(2274.52f, 7198.696f, 28.6154f),new Vector3(2274.323f, 7201.143f, 28.6154f),new Vector3(2273.461f, 7203.418f, 28.6154f),new Vector3(2271.691f, 7205.277f, 28.6154f),new Vector3(2269.26f, 7205.975f, 28.61622f),new Vector3(2266.268f, 7206.208f, 28.61707f),new Vector3(2263.799f, 7206.275f, 28.61707f),new Vector3(2261.422f, 7206.082f, 28.61711f),new Vector3(2258.967f, 7205.654f, 28.61727f),new Vector3(2256.615f, 7205.173f, 28.61762f),new Vector3(2254.306f, 7204.446f, 28.62169f),new Vector3(2251.367f, 7203.353f, 28.62425f),new Vector3(2248.462f, 7202.191f, 28.62475f),new Vector3(2245.657f, 7200.971f, 28.62588f),new Vector3(2243.369f, 7199.916f, 28.62056f),new Vector3(2240.818f, 7198.322f, 28.62056f),new Vector3(2238.871f, 7197.002f, 28.62056f),new Vector3(2236.832f, 7195.619f, 28.62056f),new Vector3(2234.334f, 7193.926f, 28.62565f),new Vector3(2232.278f, 7192.532f, 28.62052f),new Vector3(2229.676f, 7190.769f, 28.62082f),new Vector3(2227.022f, 7188.97f, 28.61575f),new Vector3(2225.163f, 7187.709f, 28.60394f),new Vector3(2222.662f, 7185.737f, 30.98852f),new Vector3(2220.467f, 7183.647f, 33.08435f),new Vector3(2218f, 7181.648f, 33.13462f),new Vector3(2215.979f, 7180.097f, 33.13854f),new Vector3(2213.752f, 7178.388f, 33.16809f),new Vector3(2211.909f, 7176.973f, 33.16925f),new Vector3(2209.488f, 7175.115f, 33.16925f),new Vector3(2194.071f, 7107.626f, 2.441848f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(harbor1[MeshM.GetMeshIndex(harbor1,destination)]) < 20f)
        {
            return harbor1;
        }
        location.AddRange(harbor1);
        
        // Sabermaw Core Path
        Vector3[] Sabermaw0 = new Vector3[]{new Vector3(2579.034f, 5009.19f, 166.3219f),new Vector3(2582.865f, 5013.263f, 164.2364f),new Vector3(2583.18f, 5015.11f, 163.4664f),new Vector3(2580.001f, 5019.049f, 161.6391f),new Vector3(2576.276f, 5023.134f, 158.1175f),new Vector3(2572.471f, 5027.375f, 159.1548f),new Vector3(2569.249f, 5031.483f, 159.9188f),new Vector3(2566.124f, 5035.949f, 163.5232f),new Vector3(2562.448f, 5041.346f, 165.9758f),new Vector3(2557.546f, 5046.025f, 167.818f),new Vector3(2553.389f, 5049.295f, 170.7722f),new Vector3(2552.085f, 5049.06f, 171.4419f),new Vector3(2551.868f, 5043.692f, 172.9678f),new Vector3(2552.985f, 5038.673f, 174.0041f),new Vector3(2555.04f, 5034.97f, 172.4785f),new Vector3(2558.056f, 5030.429f, 175.4768f),new Vector3(2560.995f, 5026.002f, 176.4686f),new Vector3(2563.912f, 5021.609f, 175.8132f),new Vector3(2566.698f, 5017.415f, 177.4597f),new Vector3(2570.617f, 5011.587f, 176.3438f),new Vector3(2575.054f, 5006.354f, 177.5068f),new Vector3(2579.195f, 5002.645f, 178.3701f),new Vector3(2584.408f, 4998.058f, 179.9281f),new Vector3(2588.452f, 4994.659f, 181.6085f),new Vector3(2592.42f, 4991.383f, 185.0078f),new Vector3(2597.622f, 4987.089f, 187.0228f),new Vector3(2600.686f, 4982.605f, 190.8037f),new Vector3(2600.474f, 4977.45f, 192.0036f),new Vector3(2595.775f, 4976.031f, 192.2405f),new Vector3(2590.662f, 4977.134f, 193.4535f),new Vector3(2584.052f, 4979.379f, 194.8806f),new Vector3(2579.463f, 4981.521f, 196.5168f),new Vector3(2575.389f, 4985.026f, 197.2739f),new Vector3(2571.115f, 4988.207f, 197.629f),new Vector3(2565.75f, 4989.726f, 198.2713f),new Vector3(2560.78f, 4991.126f, 199.7527f),new Vector3(2556.723f, 4994.054f, 201.9331f),new Vector3(2552.659f, 5000.528f, 202.5062f),new Vector3(2552.905f, 5006.187f, 202.8078f),new Vector3(2553.884f, 5011.766f, 203.5218f),new Vector3(2555.418f, 5018.477f, 204.9159f),new Vector3(2554.57f, 5025.138f, 206.7154f),new Vector3(2552.063f, 5029.823f, 207.5965f),new Vector3(2549.367f, 5034.999f, 208.5234f),new Vector3(2546.471f, 5040.558f, 208.8419f),new Vector3(2543.647f, 5045.98f, 209.0516f),new Vector3(2541.292f, 5050.501f, 209.2102f),new Vector3(2538.824f, 5055.241f, 209.4593f),new Vector3(2536.221f, 5060.24f, 209.5f),new Vector3(2533.624f, 5065.225f, 209.6161f),new Vector3(2530.601f, 5071.03f, 209.9914f),new Vector3(2528.189f, 5075.66f, 210.1663f),new Vector3(2525.521f, 5080.782f, 210.3986f),new Vector3(2523.083f, 5085.183f, 210.3396f),new Vector3(2519.984f, 5089.517f, 210.4427f),new Vector3(2517.171f, 5094.061f, 210.1984f),new Vector3(2514.96f, 5098.993f, 209.8391f),new Vector3(2512.681f, 5104.131f, 208.9291f),new Vector3(2510.322f, 5109.453f, 208.7216f),new Vector3(2508.144f, 5114.366f, 208.6264f),new Vector3(2505.517f, 5119.189f, 207.5809f),new Vector3(2500.534f, 5121.011f, 207.2827f),new Vector3(2495.539f, 5121.638f, 207.211f),new Vector3(2490.782f, 5124.368f, 206.7505f),new Vector3(2485.897f, 5127.17f, 206.5363f),new Vector3(2481.944f, 5129.347f, 207.8486f),new Vector3(2481.088f, 5131.106f, 207.7809f),new Vector3(2480.412f, 5133.12f, 207.36f),new Vector3(2479.822f, 5136.815f, 207.2364f),new Vector3(2479.075f, 5142.297f, 210.0606f),new Vector3(2478.869f, 5142.845f, 210.0544f),new Vector3(2475.22f, 5146.496f, 210.4299f),new Vector3(2475.182f, 5148.035f, 210.2775f),new Vector3(2475.239f, 5154.573f, 214.3595f),new Vector3(2475.172f, 5155.618f, 214.4327f),new Vector3(2473.684f, 5154.67f, 214.7032f),new Vector3(2471.931f, 5153.987f, 214.9444f),new Vector3(2467.08f, 5151.339f, 216.9021f),new Vector3(2462.583f, 5148.453f, 220.1827f),new Vector3(2458.393f, 5145.662f, 222.4147f),new Vector3(2453.781f, 5142.16f, 223.5896f),new Vector3(2452.827f, 5141.43f, 223.5545f),new Vector3(2451.386f, 5139.997f, 223.5488f),new Vector3(2449.848f, 5139.607f, 223.3173f),new Vector3(2449.139f, 5138.754f, 223.2993f),new Vector3(2448.317f, 5137.582f, 223.2866f),new Vector3(2447.362f, 5136.535f, 223.1739f),new Vector3(2445.708f, 5134.546f, 223.1811f),new Vector3(2441.262f, 5129.271f, 225.1973f),new Vector3(2438.414f, 5126.305f, 225.7935f),new Vector3(2435.993f, 5124.07f, 225.5532f),new Vector3(2430.777f, 5119.929f, 222.9234f),new Vector3(2425.208f, 5115.907f, 220.2045f),new Vector3(2421.422f, 5112.063f, 217.5328f),new Vector3(2417.932f, 5108.096f, 217.2047f),new Vector3(2414.204f, 5104.445f, 217.2102f),new Vector3(2410.097f, 5101.064f, 217.0521f),new Vector3(2404.988f, 5100.019f, 216.1343f),new Vector3(2400.197f, 5102.029f, 214.8087f),new Vector3(2396.975f, 5102.496f, 214.2763f),new Vector3(2393.983f, 5102.752f, 213.4273f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(Sabermaw0[MeshM.GetMeshIndex(Sabermaw0,destination)]) < 20f)
        {
            return Sabermaw0;
        }
        location.AddRange(Sabermaw0);
        
        
        // Sabermaw Ledge
        Vector3[] Sabermaw1 = new Vector3[]{new Vector3(2512.805f, 5131.488f, 204.554f),new Vector3(2518.523f, 5135.688f, 204.73f),new Vector3(2524.374f, 5139.238f, 204.4303f),new Vector3(2530.275f, 5142.103f, 204.4049f),new Vector3(2536.651f, 5145.081f, 204.5986f),new Vector3(2541.312f, 5147.258f, 205.0403f),new Vector3(2547.619f, 5150.203f, 205.7402f),new Vector3(2553.838f, 5153.118f, 205.6024f),new Vector3(2559.87f, 5156.17f, 205.2631f),new Vector3(2564.777f, 5158.682f, 204.9171f),new Vector3(2570.688f, 5161.9f, 204.4064f),new Vector3(2576.4f, 5165.308f, 203.639f),new Vector3(2581.046f, 5168.499f, 202.3435f),new Vector3(2586.088f, 5170.721f, 200.9904f),new Vector3(2593.023f, 5171.58f, 199.5927f),new Vector3(2599.468f, 5173.002f, 197.8757f),new Vector3(2605.446f, 5176.297f, 196.0925f),new Vector3(2609.834f, 5179.658f, 193.8494f),new Vector3(2613.188f, 5182.583f, 191.5663f),new Vector3(2610.047f, 5186.307f, 191.2833f),new Vector3(2604.203f, 5189.432f, 191.3135f),new Vector3(2597.732f, 5191.335f, 191.6294f),new Vector3(2591.664f, 5194.26f, 192.5035f),new Vector3(2586.764f, 5196.423f, 193.5512f),new Vector3(2581.827f, 5198.005f, 194.0444f),new Vector3(2575.143f, 5198.17f, 194.8311f),new Vector3(2573.95f, 5198.536f, 194.8731f),new Vector3(2573.382f, 5198.673f, 194.8471f),new Vector3(2508.711f, 5128.815f, 204.3952f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(Sabermaw1[MeshM.GetMeshIndex(Sabermaw1,destination)]) < 20f)
        {
            return Sabermaw1;
        }
        location.AddRange(Sabermaw1);
        
        // Sabermaw Cave to Soulfang
        Vector3[] Sabermaw2 = new Vector3[]{new Vector3(2515.851f, 5081.34f, 213.5328f),new Vector3(2512.733f, 5078.66f, 214.2493f),new Vector3(2507.76f, 5074.382f, 216.7224f),new Vector3(2503.509f, 5070.727f, 217.5795f),new Vector3(2498.419f, 5066.349f, 217.6279f),new Vector3(2494.258f, 5062.413f, 216.3272f),new Vector3(2490.183f, 5057.534f, 215.9305f),new Vector3(2486.608f, 5053.058f, 216.0204f),new Vector3(2481.446f, 5048.8f, 215.9634f),new Vector3(2477.149f, 5045.444f, 215.7807f),new Vector3(2472.116f, 5040.938f, 215.7395f),new Vector3(2467.979f, 5035.347f, 215.6481f),new Vector3(2467.709f, 5031.984f, 215.5732f),new Vector3(2468.674f, 5031.258f, 215.5849f),new Vector3(2469.79f, 5030.198f, 215.6494f),new Vector3(2470.668f, 5028.986f, 215.7059f),new Vector3(2472.312f, 5021.999f, 215.7277f),new Vector3(2472.226f, 5020.791f, 215.6784f),new Vector3(2471.869f, 5019.306f, 215.6818f),new Vector3(2471.147f, 5017.938f, 215.6982f),new Vector3(2469.755f, 5016.295f, 215.7128f),new Vector3(2468.001f, 5014.604f, 215.724f),new Vector3(2466.024f, 5013.184f, 215.7626f),new Vector3(2463.231f, 5012.066f, 215.8676f),new Vector3(2461.277f, 5011.361f, 215.9366f),new Vector3(2460.065f, 5011.179f, 215.9652f),new Vector3(2458.859f, 5011.008f, 215.9934f),new Vector3(2457.893f, 5010.38f, 216.0393f),new Vector3(2457.091f, 5009.449f, 216.0689f),new Vector3(2456.293f, 5009.508f, 216.0677f),new Vector3(2455.135f, 5009.882f, 216.0553f),new Vector3(2516.4f, 5081.813f, 213.3087f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        if (destination.Distance(Sabermaw2[MeshM.GetMeshIndex(Sabermaw2,destination)]) < 20f)
        {
            return Sabermaw2;
        }
        location.AddRange(Sabermaw2);
        
        // Nagrand Zone End
        
        // Tanaan Jungle
        
        // Intro to WoD Phased Tanaan
        // Gul'dan, under the Dark Portal
        Vector3[] tanaan0 = new Vector3[]{new Vector3(4115.51f, -2376.782f, 78.83685f),new Vector3(4113.206f, -2376.612f, 79.02532f),new Vector3(4111.524f, -2376.49f, 79.26489f),new Vector3(4109.643f, -2376.396f, 79.40253f),new Vector3(4107.417f, -2376.34f, 79.56471f),new Vector3(4105.695f, -2376.35f, 79.64124f),new Vector3(4103.971f, -2376.468f, 79.64124f),new Vector3(4101.387f, -2376.651f, 79.64124f),new Vector3(4099.05f, -2376.69f, 79.64179f),new Vector3(4098.882f, -2376.691f, 79.64225f),new Vector3(4097.678f, -2376.695f, 79.64555f),new Vector3(4095.872f, -2376.701f, 79.65035f),new Vector3(4094.087f, -2376.679f, 79.65242f),new Vector3(4092.265f, -2376.55f, 79.65376f),new Vector3(4090.541f, -2376.423f, 79.65498f),new Vector3(4088.186f, -2376.282f, 79.65677f),new Vector3(4085.688f, -2376.278f, 79.65921f),new Vector3(4083.946f, -2376.336f, 78.89339f),new Vector3(4081.541f, -2376.448f, 77.54701f),new Vector3(4078.905f, -2376.571f, 76.11134f),new Vector3(4076.667f, -2376.675f, 74.97431f),new Vector3(4074.137f, -2376.879f, 74.9805f),new Vector3(4071.952f, -2377.907f, 74.98515f),new Vector3(4069.856f, -2377.833f, 74.98842f),new Vector3(4067.612f, -2378.423f, 74.98922f),new Vector3(4065.712f, -2379.707f, 74.98927f),new Vector3(4065.489f, -2381.585f, 74.98927f),new Vector3(4065.45f, -2383.81f, 74.98927f),new Vector3(4065.426f, -2385.553f, 74.98927f),new Vector3(4066.191f, -2387.738f, 74.9893f),new Vector3(4067.751f, -2388.545f, 74.98948f),new Vector3(4069.932f, -2387.83f, 74.98948f),new Vector3(4071.437f, -2386.831f, 74.98948f),new Vector3(4072.915f, -2385.929f, 73.79196f),new Vector3(4075.224f, -2385.82f, 71.78139f),new Vector3(4076.978f, -2386.144f, 70.28617f),new Vector3(4079.419f, -2386.677f, 69.53616f),new Vector3(4081.524f, -2387.495f, 69.53627f),new Vector3(4083.802f, -2388.504f, 69.53638f),new Vector3(4085.9f, -2389.542f, 69.53645f),new Vector3(4087.864f, -2390.934f, 69.53677f),new Vector3(4089.79f, -2392.456f, 69.534f),new Vector3(4091.123f, -2394.406f, 69.53246f),new Vector3(4091.956f, -2396.672f, 69.52937f),new Vector3(4092.782f, -2398.919f, 69.85674f),new Vector3(4093.135f, -2401.352f, 69.73512f),new Vector3(4092.288f, -2403.085f, 69.46996f),new Vector3(4089.938f, -2403.12f, 69.47026f),new Vector3(4087.555f, -2403.446f, 69.86047f),new Vector3(4085.887f, -2404.984f, 69.86214f),new Vector3(4085.221f, -2407.254f, 69.85251f),new Vector3(4085.336f, -2408.872f, 69.53478f),new Vector3(4085.766f, -2411.347f, 69.53478f),new Vector3(4085.659f, -2413.641f, 69.53478f),new Vector3(4084.832f, -2415.93f, 69.53575f),new Vector3(4083.68f, -2417.961f, 69.53575f),new Vector3(4082.015f, -2419.954f, 69.53575f),new Vector3(4080.291f, -2421.495f, 69.53575f),new Vector3(4077.972f, -2422.457f, 69.53663f),new Vector3(4076.375f, -2424.276f, 69.53509f),new Vector3(4075.151f, -2426.171f, 69.53355f),new Vector3(4073.36f, -2427.86f, 69.53355f),new Vector3(4071.29f, -2429.449f, 69.85604f),new Vector3(4069.389f, -2430.388f, 69.27149f),new Vector3(4066.978f, -2430.036f, 69.09229f),new Vector3(4064.785f, -2428.78f, 69.85656f),new Vector3(4062.991f, -2427.404f, 69.85656f),new Vector3(4061.208f, -2425.798f, 69.534f),new Vector3(4059.578f, -2424.074f, 69.53465f),new Vector3(4058.11f, -2423.289f, 69.53471f),new Vector3(4056.442f, -2422.527f, 69.53503f),new Vector3(4054.357f, -2421.383f, 69.53736f),new Vector3(4052.724f, -2419.815f, 69.53736f),new Vector3(4051.242f, -2417.845f, 69.53736f),new Vector3(4050.25f, -2415.885f, 69.53736f),new Vector3(4048.701f, -2413.952f, 69.53736f),new Vector3(4047.017f, -2412.223f, 69.53778f),new Vector3(4045.274f, -2410.572f, 69.53809f),new Vector3(4043.414f, -2409.312f, 69.53823f),new Vector3(4041.441f, -2408.221f, 69.74709f),new Vector3(4039.234f, -2406.795f, 69.09608f),new Vector3(4038.392f, -2404.774f, 69.83495f),new Vector3(4039.081f, -2402.537f, 69.46632f),new Vector3(4039.992f, -2401.026f, 69.1309f),new Vector3(4041.203f, -2399.018f, 69.8646f),new Vector3(4042.405f, -2397.023f, 69.53645f),new Vector3(4043.511f, -2395.527f, 69.53757f),new Vector3(4045.416f, -2393.804f, 69.53812f),new Vector3(4047.165f, -2392.252f, 69.53865f),new Vector3(4048.233f, -2391.304f, 69.53885f),new Vector3(4049.065f, -2390.565f, 69.53889f),new Vector3(4119.103f, -2376.414f, 78.8f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        // Sorting closest nodes
        if (destination.Distance(tanaan0[MeshM.GetMeshIndex(tanaan0,destination)]) < 20f)
        {
            return tanaan0;
        }
        location.AddRange(tanaan0);
        
        // Tanaan Jungle Cannon
        Vector3[] tanaan1 = new Vector3[]{new Vector3(4106.535f, -1629.192f, 58.29166f),new Vector3(4108.83f, -1630.022f, 58.78631f),new Vector3(4111.183f, -1630.752f, 59.31752f),new Vector3(4113.578f, -1631.263f, 59.88155f),new Vector3(4116.081f, -1631.5f, 60.4236f),new Vector3(4119.119f, -1631.217f, 61.18087f),new Vector3(4121.523f, -1630.757f, 61.85298f),new Vector3(4123.871f, -1630.25f, 63.62765f),new Vector3(4126.238f, -1629.924f, 65.03706f),new Vector3(4128.784f, -1629.983f, 65.58108f),new Vector3(4131.515f, -1630.972f, 66.9425f),new Vector3(4133.552f, -1633.459f, 67.51301f),new Vector3(4135.519f, -1635.809f, 67.89457f),new Vector3(4138.38f, -1636.722f, 68.6036f),new Vector3(4140.854f, -1636.595f, 69.24099f),new Vector3(4143.716f, -1635.82f, 70.79987f),new Vector3(4146.065f, -1634.746f, 73.14516f),new Vector3(4148.885f, -1634.175f, 73.72562f),new Vector3(4151.3f, -1634.693f, 73.72588f),new Vector3(4153.615f, -1635.385f, 73.72598f),new Vector3(4156.139f, -1637.036f, 73.72598f),new Vector3(4156.939f, -1639.96f, 73.72666f),new Vector3(4157.237f, -1642.327f, 72.48113f),new Vector3(4158.3f, -1645.274f, 70.07532f),new Vector3(4159.162f, -1647.535f, 69.56692f),new Vector3(4160.718f, -1649.453f, 69.6007f),new Vector3(4162.37f, -1651.214f, 69.75479f),new Vector3(4164.285f, -1652.835f, 70.24345f),new Vector3(4165.676f, -1655.012f, 70.29344f),new Vector3(4166.423f, -1655.947f, 70.36499f),new Vector3(4167.609f, -1658.245f, 70.21637f),new Vector3(4168.417f, -1661.063f, 70.48714f),new Vector3(4168.768f, -1663.641f, 70.58488f),new Vector3(4168.334f, -1666.013f, 70.92993f),new Vector3(4166.555f, -1668.71f, 71.264f),new Vector3(4164.47f, -1669.857f, 70.01928f),new Vector3(4163.036f, -1672.441f, 68.99304f),new Vector3(4161.187f, -1673.987f, 68.04242f),new Vector3(4159.249f, -1676.272f, 67.8454f),new Vector3(4157.72f, -1678.078f, 67.97446f),new Vector3(4156.088f, -1680.008f, 68.17107f),new Vector3(4154.965f, -1682.066f, 68.07056f),new Vector3(4153.798f, -1684.108f, 67.79848f),new Vector3(4152.782f, -1686.934f, 68.16821f),new Vector3(4151.789f, -1689.879f, 68.73762f),new Vector3(4150.99f, -1692.232f, 68.85048f),new Vector3(4149.591f, -1694.207f, 68.8282f),new Vector3(4147.769f, -1695.948f, 68.59286f),new Vector3(4145.986f, -1697.598f, 68.0041f),new Vector3(4143.466f, -1699.36f, 67.15614f),new Vector3(4141.38f, -1700.338f, 66.73082f),new Vector3(4139.083f, -1701.243f, 66.75842f),new Vector3(4136.58f, -1701.597f, 67.0294f),new Vector3(4134.091f, -1701.224f, 67.38213f),new Vector3(4131.834f, -1699.918f, 67.5124f),new Vector3(4130.419f, -1697.879f, 67.26137f),new Vector3(4129.503f, -1695.759f, 67.08324f),new Vector3(4128.768f, -1693.432f, 66.56789f),new Vector3(4128.483f, -1690.87f, 66.00738f),new Vector3(4128.489f, -1688.525f, 65.89268f),new Vector3(4128.651f, -1686.082f, 65.92198f),new Vector3(4128.895f, -1685.118f, 65.93893f),new Vector3(4129.243f, -1685.248f, 65.90454f),new Vector3(4129.445f, -1684.703f, 65.91405f),new Vector3(4129.624f, -1684.224f, 65.92254f),new Vector3(4104.938f, -1628.277f, 57.97995f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        // Sorting closest nodes
        if (destination.Distance(tanaan1[MeshM.GetMeshIndex(tanaan1,destination)]) < 20f)
        {
            return tanaan1;
        }
        location.AddRange(tanaan1);
        
        
        // Vol'mar Hold Command Room
        Vector3[] tanaan2 = new Vector3[]{new Vector3(4317.651f, -1492.473f, 83.55926f),new Vector3(4318.459f, -1494.673f, 84.84425f),new Vector3(4318.935f, -1497.005f, 86.6916f),new Vector3(4319.569f, -1499.482f, 88.46053f),new Vector3(4320.702f, -1502.391f, 88.27164f),new Vector3(4321.966f, -1505.114f, 88.36373f),new Vector3(4323.613f, -1507.821f, 88.32266f),new Vector3(4325.193f, -1509.609f, 88.28005f),new Vector3(4326.877f, -1511.384f, 88.02313f),new Vector3(4328.556f, -1512.96f, 88.02414f),new Vector3(4330.437f, -1514.848f, 88.02106f),new Vector3(4331.832f, -1516.678f, 88.01797f),new Vector3(4333.291f, -1519.379f, 88.01968f),new Vector3(4334.28f, -1522.446f, 88.02312f),new Vector3(4334.719f, -1524.977f, 88.02003f),new Vector3(4335.065f, -1527.413f, 88.29988f),new Vector3(4316.827f, -1490.345f, 83.24374f),new Vector3(0f,0f,1f),new Vector3(0f,0f,0f)};
        
        
        // Sorting closest nodes
        if (destination.Distance(tanaan2[MeshM.GetMeshIndex(tanaan2,destination)]) < 20f)
        {
            return tanaan2;
        }
        location.AddRange(tanaan2);
        
        // Converting list into a less bloated Array for later use.
        Vector3[] result = new Vector3[location.Count];
        for (int i = 0; i < result.Length; i++)
        {
            result[i] = location[i];
        }
        return result;
    }
}